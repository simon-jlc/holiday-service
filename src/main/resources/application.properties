# App configuration
# Define the output directory of employees_day_off job
org.holiday.employees_day_off.output.dir=/Users/simon/Documents/temp

# DataSource configuration for MySQL
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MariaDB103Dialect
#spring.datasource.url=jdbc:mysql://localhost:3306/holiday
#spring.datasource.username=root
#spring.datasource.password=jams!bd!1
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# DataSource configuration for PG
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/holiday
spring.datasource.username=pgadmin
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

# DataSource configuration for Google Cloud
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
#spring.datasource.username=sa
#spring.datasource.password=sa

# JPA / Hibernate configuration
# enable jdbc insert/update batch when using #saveAll
hibernate.jdbc.batch_size=50
# batch insert / update keep the order of list
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# Batch configuration
spring.batch.jdbc.initialize-schema=always

# slf4j + logback level configuration
logging.level.root=INFO
logging.level.org.springframework.batch=DEBUG
# logging.level.org.hibernate.SQL=TRACE
# logging.level.org.springframework.transaction=TRACE
# logging.level.org.springframework.data=TRACE
# logging.level.org.springframework.orm=TRACE
# logging.level.org.springframework.security=TRACE
# logging.level.org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource=INFO
